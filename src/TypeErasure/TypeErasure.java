package TypeErasure;

//    üîπ –¢–ï–ú–ê 1: Type Erasure
//üß© –ó–∞–¥–∞—á–∞ 1 ‚Äî –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ generic-–æ–±—ä–µ–∫—Ç–æ–≤
//
//    –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Box<T> –∏ –ø—Ä–æ–≤–µ—Ä—å, –±—É–¥—É—Ç –ª–∏ Box<Integer> –∏ Box<String> —Å—á–∏—Ç–∞—Ç—å—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
//
//            –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
//
//    –°–æ–∑–¥–∞–π –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞: Box<Integer> –∏ Box<String>.
//
//    –°—Ä–∞–≤–Ω–∏ –∏—Ö –∫–ª–∞—Å—Å—ã —á–µ—Ä–µ–∑ getClass().
//
//    –í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏ –æ–±—ä—è—Å–Ω–∏ –µ–≥–æ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.
//
//    –ü—Ä–∏–º–µ—Ä —à–∞–±–ª–æ–Ω–∞:
//
//    public class ErasureTask1 {
//        public static void main(String[] args) {
//            // —Ç–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å
//        }
//    }
//
//    class Box<T> {
//        // –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º
//    }


//    public class TypeErasure {
//        public static void Erasure(String[] args) {
//            Box<Integer> integerBox = new Box<>();
//            Box<String> stringBox = new Box<>();
//
//            boolean classesAreEqual = integerBox.getClass() == stringBox.getClass();
//
//            System.out.println(classesAreEqual);
//        }
//    }
//
//    class Box<T> {
//    }

//üß© –ó–∞–¥–∞—á–∞ 2 ‚Äî –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –ø–µ—á–∞—Ç–∏ —Å–ø–∏—Å–∫–∞
//
//–°–æ–∑–¥–∞–π –º–µ—Ç–æ–¥ printList, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ª—é–±–æ–π —Å–ø–∏—Å–æ–∫ (–∏ List<String>, –∏ List<Integer> –∏ —Ç.–¥.).
//
//–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
//
//–ù–∞–ø–∏—à–∏ –º–µ—Ç–æ–¥ printList(List<?> list).
//
//–í main —Å–æ–∑–¥–∞–π –¥–≤–∞ —Å–ø–∏—Å–∫–∞ ‚Äî —á–∏—Å–µ–ª –∏ —Å—Ç—Ä–æ–∫.
//
//–í—ã–∑–æ–≤–∏ –º–µ—Ç–æ–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ.
//
//–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.

//import java.util.List;
//import java.util.ArrayList;
//
//public class TypeErasure {
//    public static void printList(List<?> list) {
//        for (Object item : list) {
//            System.out.println(item);
//        }
//    }
//
//    public static void main(String[] args) {
//        List<String> stringList = new ArrayList<>();
//        stringList.add("Hello");
//        stringList.add("World");
//
//        List<Integer> intList = new ArrayList<>();
//        intList.add(1);
//        intList.add(2);
//        intList.add(3);
//
//        printList(stringList);
//        printList(intList);
//    }
//}


//üß© –ó–∞–¥–∞—á–∞ 3 ‚Äî –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å—Ç–∏—Ä–∞–Ω–∏—è —Ç–∏–ø–æ–≤
//
//–ü–æ–∫–∞–∂–∏, —á—Ç–æ —Ç–∏–ø T –≤ generic-–∫–ª–∞—Å—Å–µ —Å—Ç–∏—Ä–∞–µ—Ç—Å—è –¥–æ Object.
//
//–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
//
//–°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å GenericBox<T> —Å –ø–æ–ª–µ–º T value.
//
//–î–æ–±–∞–≤—å –º–µ—Ç–æ–¥—ã setValue() –∏ getValue().
//
//–ß–µ—Ä–µ–∑ Reflection (–Ω–∞–ø—Ä–∏–º–µ—Ä getDeclaredFields()) –≤—ã–≤–µ–¥–∏, –∫–∞–∫–æ–≥–æ —Ç–∏–ø–∞ —Ä–µ–∞–ª—å–Ω–æ –ø–æ–ª–µ value –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
//
//–ü–æ–¥—Å–∫–∞–∑–∫–∞: –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è java.lang.Object.


//import java.lang.reflect.Field;
//
//public class TypeErasure {
//    public static void main(String[] args) {
//        GenericBox<Integer> box = new GenericBox<>();
//
//        Field[] fields = box.getClass().getDeclaredFields();
//        for (Field field : fields) {
//            System.out.println(field.getType());
//        }
//    }
//}
//
//class GenericBox<T> {
//    private T value;
//
//    public void setValue(T value) {
//        this.value = value;
//    }
//
//    public T getValue() {
//        return value;
//    }
//}