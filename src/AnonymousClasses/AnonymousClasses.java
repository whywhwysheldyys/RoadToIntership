package AnonymousClasses;


//üß© –¢–µ–º–∞ 1. –ê–Ω–æ–Ω–∏–º–Ω—ã–µ –∫–ª–∞—Å—Å—ã
//üîπ –ó–∞–¥–∞—á–∞ 1 (–ø—Ä–æ—Å—Ç–∞—è)
//
//–°–æ–∑–¥–∞–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:
//
//interface Greeter {
//    void greet();
//}
//
//
//–í main() —Å–æ–∑–¥–∞–π –∞–Ω–æ–Ω–∏–º–Ω—ã–π –∫–ª–∞—Å—Å, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π —ç—Ç–æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å,
//–∏ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å:
//
//Hello from anonymous class!
//interface Greeter {
//    void greet();
//}
//
//public class AnonymousClasses {
//    public static void main(String[] args) {
//        Greeter greeter = new Greeter() {
//            @Override
//            public void greet() {
//                System.out.println("Hello from anonymous class!");
//            }
//        };
//        greeter.greet();
//    }
//}


//üîπ –ó–∞–¥–∞—á–∞ 2 (—Å—Ä–µ–¥–Ω—è—è)
//
//–°–æ–∑–¥–∞–π –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å:
//
//abstract class Shape {
//    abstract double area();
//}
//
//
//–í main() —Å–æ–∑–¥–∞–π –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è:
//
//–∫—Ä—É–≥–∞ (r = 5),
//
//–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ (a = 4, b = 6).
//
//–ö–∞–∂–¥—ã–π –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –º–µ—Ç–æ–¥ area() –∏ –≤—ã–≤–æ–¥–∏—Ç—å —Å–≤–æ—é –ø–ª–æ—â–∞–¥—å.



//abstract class Shape {
//    abstract double area();
//}
//
//public class AnonymousClasses {
//    public static void main(String[] args) {
//        Shape circle = new Shape() {
//            double r = 5;
//            @Override
//            double area() {
//                return Math.PI * r * r;
//            }
//        };
//
//        Shape rectangle = new Shape() {
//            double a = 4;
//            double b = 6;
//            @Override
//            double area() {
//                return a * b;
//            }
//        };
//
//        System.out.println("Circle area: " + circle.area());
//        System.out.println("Rectangle area: " + rectangle.area());
//    }
//}

//üîπ –ó–∞–¥–∞—á–∞ 3 (—Å–ª–æ–∂–Ω–∞—è)
//
//–°–æ–∑–¥–∞–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:
//
//interface Operation {
//    int execute(int a, int b);
//}
//
//
//–°–æ–∑–¥–∞–π –º–µ—Ç–æ–¥:
//
//public static void calculate(Operation op)
//
//
//–∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–º–µ–Ω—è–µ—Ç op.execute(10, 5) –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
//–í main() –≤—ã–∑–æ–≤–∏ calculate() —Ç—Ä–∏–∂–¥—ã, –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø–µ—Ä–µ–¥–∞–≤–∞—è –∞–Ω–æ–Ω–∏–º–Ω—ã–π –∫–ª–∞—Å—Å, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π:
//
//—Å–ª–æ–∂–µ–Ω–∏–µ,
//
//–≤—ã—á–∏—Ç–∞–Ω–∏–µ,
//
//–¥–µ–ª–µ–Ω–∏–µ.

//interface Operation {
//    int execute(int a, int b);
//}
//
//public class AnonymousClasses {
//    public static void calculate(Operation op) {
//        System.out.println(op.execute(10, 5));
//    }
//
//    public static void main(String[] args) {
//        calculate(new Operation() {
//            @Override
//            public int execute(int a, int b) {
//                return a + b;
//            }
//        });
//
//        calculate(new Operation() {
//            @Override
//            public int execute(int a, int b) {
//                return a - b;
//            }
//        });
//
//        calculate(new Operation() {
//            @Override
//            public int execute(int a, int b) {
//                return a / b;
//            }
//        });
//    }
//}