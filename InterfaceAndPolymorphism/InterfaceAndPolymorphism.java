package InterfaceAndPolymorphism;


//üîπ –ó–∞–¥–∞—á–∞ 1 ‚Äî –ü—Ä–æ—Å—Ç–∞—è
//
//–°–æ–∑–¥–∞–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Shape —Å –º–µ—Ç–æ–¥–æ–º
//
//double getArea();
//
//
//–†–µ–∞–ª–∏–∑—É–π –µ–≥–æ –≤ –¥–≤—É—Ö –∫–ª–∞—Å—Å–∞—Ö: Circle –∏ Rectangle.
//
//Circle —Ö—Ä–∞–Ω–∏—Ç –ø–æ–ª–µ radius
//
//Rectangle ‚Äî width –∏ height
//        –°–æ–∑–¥–∞–π Main, –≤ –∫–æ—Ç–æ—Ä–æ–º:
//
//–°–æ–∑–¥–∞—ë—à—å –º–∞—Å—Å–∏–≤ Shape[] shapes –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∏–≥—É—Ä;
//
//–í—ã–≤–æ–¥–∏—à—å –ø–ª–æ—â–∞–¥—å –∫–∞–∂–¥–æ–π —Ñ–∏–≥—É—Ä—ã.


//    interface Shape {
//        double getArea();
//    }
//
//
//    class Circle implements Shape {
//        private double radius;
//
//        public Circle(double radius) {
//            this.radius = radius;
//        }
//
//        @Override
//        public double getArea() {
//            return Math.PI * radius * radius;
//        }
//    }
//
//
//    class Rectangle implements Shape {
//        private double width;
//        private double height;
//
//        public Rectangle(double width, double height) {
//            this.width = width;
//            this.height = height;
//        }
//
//        @Override
//        public double getArea() {
//            return width * height;
//        }
//    }
//
//
//    public class InterfaceAndPolymorphism {
//        public static void main(String[] args) {
//            // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–∏–≥—É—Ä
//            Shape[] shapes = {
//                    new Circle(5.0),
//                    new Rectangle(3.0, 4.0),
//                    new Circle(2.5),
//                    new Rectangle(6.0, 1.5)
//            };
//
//
//            for (Shape shape : shapes) {
//                System.out.printf("–ü–ª–æ—â–∞–¥—å —Ñ–∏–≥—É—Ä—ã: %.2f\n", shape.getArea());
//            }
//        }
//    }

//üîπ –ó–∞–¥–∞—á–∞ 2 ‚Äî –°—Ä–µ–¥–Ω—è—è
//
//–î–æ–±–∞–≤—å –∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É Shape –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥
//
//double getPerimeter();
//
//
//–∏ —Ä–µ–∞–ª–∏–∑—É–π –µ–≥–æ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–ª–∞—Å—Å–∞—Ö.
//–°–æ–∑–¥–∞–π –º–µ—Ç–æ–¥ printShapeInfo(Shape shape), –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç:
//
//–¢–∏–ø —Ñ–∏–≥—É—Ä—ã: ...
//–ü–ª–æ—â–∞–¥—å: ...
//–ü–µ—Ä–∏–º–µ—Ç—Ä: ...
//
//
//–∏ –∏—Å–ø–æ–ª—å–∑—É–π –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º, —á—Ç–æ–±—ã –≤—ã–∑—ã–≤–∞—Ç—å –µ–≥–æ –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ–∏–≥—É—Ä—ã –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–∞ (instanceof –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å!).

//interface Shape {
//    double getArea();
//    double getPerimeter();
//}
//
//class Circle implements Shape {
//    private double radius;
//
//    public Circle(double radius) {
//        this.radius = radius;
//    }
//
//    @Override
//    public double getArea() {
//        return Math.PI * radius * radius;
//    }
//
//    @Override
//    public double getPerimeter() {
//        return 2 * Math.PI * radius;
//    }
//}
//
//class Rectangle implements Shape {
//    private double width;
//    private double height;
//
//    public Rectangle(double width, double height) {
//        this.width = width;
//        this.height = height;
//    }
//
//    @Override
//    public double getArea() {
//        return width * height;
//    }
//
//    @Override
//    public double getPerimeter() {
//        return 2 * (width + height);
//    }
//}
//
//public class InterfaceAndPolymorphism{
//    public static void printShapeInfo(Shape shape) {
//        System.out.println("–¢–∏–ø —Ñ–∏–≥—É—Ä—ã: " + shape.getClass().getSimpleName());
//        System.out.printf("–ü–ª–æ—â–∞–¥—å: %.2f\n", shape.getArea());
//        System.out.printf("–ü–µ—Ä–∏–º–µ—Ç—Ä: %.2f\n", shape.getPerimeter());
//        System.out.println();
//    }
//
//    public static void main(String[] args) {
//        Shape[] shapes = {
//                new Circle(5.0),
//                new Rectangle(3.0, 4.0),
//                new Circle(2.5),
//                new Rectangle(6.0, 1.5)
//        };
//
//        for (Shape shape : shapes) {
//            printShapeInfo(shape);
//        }
//    }
//}


//üîπ –ó–∞–¥–∞—á–∞ 3 ‚Äî –°–ª–æ–∂–Ω–∞—è
//
//–î–æ–±–∞–≤—å –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
//
//interface Colored {
//    String getColor();
//}
//
//
//–†–µ–∞–ª–∏–∑—É–π –µ–≥–æ –≤ Circle –∏ Rectangle.
//–¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–π –∫–ª–∞—Å—Å ShapePrinter, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥:
//
//public static void printDetailedInfo(Shape shape)
//
//
//–û–Ω –¥–æ–ª–∂–µ–Ω:
//
//–í—ã–≤–µ—Å—Ç–∏ —Ç–∏–ø —Ñ–∏–≥—É—Ä—ã, –ø–ª–æ—â–∞–¥—å –∏ –ø–µ—Ä–∏–º–µ—Ç—Ä (–∏—Å–ø–æ–ª—å–∑—É—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Shape);
//
//–ï—Å–ª–∏ —Ñ–∏–≥—É—Ä–∞ —Ç–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑—É–µ—Ç Colored, –≤—ã–≤–µ—Å—Ç–∏ –µ—ë —Ü–≤–µ—Ç;
//
//–†–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è instanceof ‚Äî —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º.
//interface Shape {
//    double getArea();
//    double getPerimeter();
//}
//
//class Circle implements Shape {
//    private double radius;
//
//    public Circle(double radius) {
//        this.radius = radius;
//    }
//
//    @Override
//    public double getArea() {
//        return Math.PI * radius * radius;
//    }
//
//    @Override
//    public double getPerimeter() {
//        return 2 * Math.PI * radius;
//    }
//}
//
//class Rectangle implements Shape {
//    private double width;
//    private double height;
//
//    public Rectangle(double width, double height) {
//        this.width = width;
//        this.height = height;
//    }
//
//    @Override
//    public double getArea() {
//        return width * height;
//    }
//
//    @Override
//    public double getPerimeter() {
//        return 2 * (width + height);
//    }
//}
//
//public class InterfaceAndPolymorphism {
//    public static void printShapeInfo(Shape shape) {
//        System.out.println("–¢–∏–ø —Ñ–∏–≥—É—Ä—ã: " + shape.getClass().getSimpleName());
//        System.out.printf("–ü–ª–æ—â–∞–¥—å: %.2f\n", shape.getArea());
//        System.out.printf("–ü–µ—Ä–∏–º–µ—Ç—Ä: %.2f\n", shape.getPerimeter());
//        System.out.println();
//    }
//
//    public static void main(String[] args) {
//        Shape[] shapes = {
//                new Circle(5.0),
//                new Rectangle(3.0, 4.0),
//                new Circle(2.5),
//                new Rectangle(6.0, 1.5)
//        };
//
//        for (Shape shape : shapes) {
//            printShapeInfo(shape);
//        }
//    }
//}
